input=read.csv('train.csv',, stringsAsFactors=FALSE)
full=input[c(1:1000),]
#exchange the time into days
# Get the time value:
full$TimeValue <- sapply(full$AgeuponOutcome,
function(x) strsplit(x, split = ' ')[[1]][1])
# Now get the unit of time:
full$UnitofTime <- sapply(full$AgeuponOutcome,
function(x) strsplit(x, split = ' ')[[1]][2])
# Fortunately any "s" marks the plural, so we can just pull them all out
full$UnitofTime <- gsub('s', '', full$UnitofTime)
full$TimeValue  <- as.numeric(full$TimeValue)
full$UnitofTime <- as.factor(full$UnitofTime)
# Make a multiplier vector
multiplier <- ifelse(full$UnitofTime == 'day', 1,
ifelse(full$UnitofTime == 'week', 7,
ifelse(full$UnitofTime == 'month', 30, # Close enough
ifelse(full$UnitofTime == 'year', 365, NA))))
# Apply our multiplier
full$AgeinDays <- full$TimeValue  * multiplier
# Replace blank sex with most common
full$SexuponOutcome <- ifelse(nchar(full$SexuponOutcome)==0,
'Spayed Female', full$SexuponOutcome)
# Use "grepl" to look for "Mix"
full$IsMix <- ifelse(grepl('Mix', full$Breed), 1, 0)
# Split on "/" and remove " Mix" to simplify Breed
full$SimpleBreed <- sapply(full$Breed,
function(x) gsub(' Mix', '',
strsplit(x, split = '/')[[1]][1]))
# Use strsplit to grab the first color
full$SimpleColor <- sapply(full$Color,
function(x) strsplit(x, split = '/| ')[[1]][1])
#result
m=input[c(1:1000),]
write.csv(m[-1],'output.csv')
setwd("D:/NCKU/修课/Data mining/project/data mining project2")
input=read.csv('train.csv',, stringsAsFactors=FALSE)
full=input[c(1:1000),]
#exchange the time into days
# Get the time value:
full$TimeValue <- sapply(full$AgeuponOutcome,
function(x) strsplit(x, split = ' ')[[1]][1])
# Now get the unit of time:
full$UnitofTime <- sapply(full$AgeuponOutcome,
function(x) strsplit(x, split = ' ')[[1]][2])
# Fortunately any "s" marks the plural, so we can just pull them all out
full$UnitofTime <- gsub('s', '', full$UnitofTime)
full$TimeValue  <- as.numeric(full$TimeValue)
full$UnitofTime <- as.factor(full$UnitofTime)
# Make a multiplier vector
multiplier <- ifelse(full$UnitofTime == 'day', 1,
ifelse(full$UnitofTime == 'week', 7,
ifelse(full$UnitofTime == 'month', 30, # Close enough
ifelse(full$UnitofTime == 'year', 365, NA))))
# Apply our multiplier
full$AgeinDays <- full$TimeValue  * multiplier
# Replace blank sex with most common
full$SexuponOutcome <- ifelse(nchar(full$SexuponOutcome)==0,
'Spayed Female', full$SexuponOutcome)
# Use "grepl" to look for "Mix"
full$IsMix <- ifelse(grepl('Mix', full$Breed), 1, 0)
# Split on "/" and remove " Mix" to simplify Breed
full$SimpleBreed <- sapply(full$Breed,
function(x) gsub(' Mix', '',
strsplit(x, split = '/')[[1]][1]))
# Use strsplit to grab the first color
full$SimpleColor <- sapply(full$Color,
function(x) strsplit(x, split = '/| ')[[1]][1])
#result
m=input[c(1:1000),]
write.csv(m[-1],'output.csv')
View(full)
View(input)
View(input)
setwd("D:/NCKU/修课/Data mining/project/data mining project2")
ssinput=read.csv('in.csv',, stringsAsFactors=FALSE)
unique（ssinput$AnimalType）
unique(ssinput$AnimalType)
unique(ssinput$SexuponOutcome)
unique(ssinput$SimpleBreed)
unique(ssinput$SimpleColor)
unique(ssinput$OutcomeType)
ssinput=read.csv('in.csv',, stringsAsFactors=FALSE)
for(i in length(ssinput)){
ssinput[,i]=as.factor(ssinput[,i])
}
mod3 <- C5.0(OutcomeType ~ ., data = ssinput)
library(C50)
mod3 <- C5.0(OutcomeType ~ ., data = ssinput)
plot(mod3)
plot(mod3,subtree=2)
summary(mod3)
library(rpart)
fit = rpart(OutcomeType ~ ., data = ssinput)
plot(fit)
text(fit,use.n=TRUE,cex=1)
fit
